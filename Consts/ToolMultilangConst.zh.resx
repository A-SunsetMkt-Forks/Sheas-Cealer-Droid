<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DohImageButtonDescription" xml:space="preserve">
    <value>解析</value>
  </data>
  <data name="DohImageButtonTooltip" xml:space="preserve">
    <value>点击打开 DoH 解析弹窗</value>
  </data>
  <data name="DohToolItemContent" xml:space="preserve">
    <value>加密解析任意域名的纯净 IP</value>
  </data>
  <data name="DohToolItemTitle" xml:space="preserve">
    <value>DoH 解析</value>
  </data>
  <data name="Ipv6ImageButtonDescription" xml:space="preserve">
    <value>测试</value>
  </data>
  <data name="Ipv6ImageButtonTooltip" xml:space="preserve">
    <value>点击执行 IPv6 测试</value>
  </data>
  <data name="Ipv6ToolItemContent" xml:space="preserve">
    <value>测试本地网络环境能否访问 IPv6</value>
  </data>
  <data name="Ipv6ToolItemTitle" xml:space="preserve">
    <value>IPv6 测试</value>
  </data>
  <data name="PingImageButtonDescription" xml:space="preserve">
    <value>Ping</value>
  </data>
  <data name="PingImageButtonTooltip" xml:space="preserve">
    <value>点击执行 ping 连通性测试</value>
  </data>
  <data name="PingToolItemContent" xml:space="preserve">
    <value>测试本地网络能否 ping 通指定地址</value>
  </data>
  <data name="PingToolItemTitle" xml:space="preserve">
    <value>Ping 测试</value>
  </data>
  <data name="ReserveImageButtonDescription" xml:space="preserve">
    <value>判断</value>
  </data>
  <data name="ReserveImageButtonTooltip" xml:space="preserve">
    <value>点击执行保留 IP 判断</value>
  </data>
  <data name="ReserveToolItemContent" xml:space="preserve">
    <value>判断指定 IP 是否为保留 IP</value>
  </data>
  <data name="ReserveToolItemTitle" xml:space="preserve">
    <value>保留 IP 判断</value>
  </data>
  <data name="_DohDomainNamePopupMsg" xml:space="preserve">
    <value>输入一个需要加密解析的域名</value>
  </data>
  <data name="_DohDomainNamePopupTitle" xml:space="preserve">
    <value>待解析域名</value>
  </data>
  <data name="_DohResolveErrorToastMsg" xml:space="preserve">
    <value>解析失败，肥肠包芡喵 ❌</value>
  </data>
  <data name="_DohResolveInvalidToastMsg" xml:space="preserve">
    <value>域名格式错误，无法识别 ❌</value>
  </data>
  <data name="_DohResolveSuccessToastMsg" xml:space="preserve">
    <value>解析成功，IP 已复制 ✅</value>
  </data>
  <data name="_Ipv6TestErrorToastMsg" xml:space="preserve">
    <value>连接失败，当前网络不可访问 IPv6 ❌</value>
  </data>
  <data name="_Ipv6TestSuccessToastMsg" xml:space="preserve">
    <value>连接成功，本地网络可访问 IPv6 ✅</value>
  </data>
  <data name="_PingHostNamePopupMsg" xml:space="preserve">
    <value>输入一个需要测试 ping 连通性的地址</value>
  </data>
  <data name="_PingHostNamePopupTitle" xml:space="preserve">
    <value>待 ping 地址</value>
  </data>
  <data name="_PingTestErrorToastMsg" xml:space="preserve">
    <value>连接失败，当前地址 ping 不通 ❌</value>
  </data>
  <data name="_PingTestInvalidToastMsg" xml:space="preserve">
    <value>地址格式错误，无法识别 ❌</value>
  </data>
  <data name="_PingTestReversedToastMsg" xml:space="preserve">
    <value>连接取消，DNS 返回了保留 IP ❌</value>
  </data>
  <data name="_PingTestSuccessToastMsg" xml:space="preserve">
    <value>连接成功，当前地址可 ping 通 ✅</value>
  </data>
  <data name="_ReserveCheckHostPopupMsg" xml:space="preserve">
    <value>输入一个需要判断是否为保留 IP 的 IP</value>
  </data>
  <data name="_ReserveCheckHostPopupTitle" xml:space="preserve">
    <value>待判断 IP</value>
  </data>
  <data name="_ReserveCheckInvalidToastMsg" xml:space="preserve">
    <value>IP 格式错误，无法识别 ❌</value>
  </data>
  <data name="_ReserveCheckNonreversedToastMsg" xml:space="preserve">
    <value>匹配成功，当前 IP 为非保留 IP ✅</value>
  </data>
  <data name="_ReserveCheckReversedToastMsg" xml:space="preserve">
    <value>匹配成功，当前 IP 为保留 IP ✅</value>
  </data>
</root>