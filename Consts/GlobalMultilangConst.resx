<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutMenuItemTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="BrowserPickerTitle" xml:space="preserve">
    <value>Select a Chromium-based browser</value>
  </data>
  <data name="BrowserPickerTooltip" xml:space="preserve">
    <value>Tap to open a browser selection pop-up</value>
  </data>
  <data name="CommandButtonText" xml:space="preserve">
    <value>Copy Command</value>
  </data>
  <data name="CommandButtonTooltip" xml:space="preserve">
    <value>Tap to copy an ADB command</value>
  </data>
  <data name="LinkButtonText" xml:space="preserve">
    <value>Copy Link</value>
  </data>
  <data name="LinkButtonTooltip" xml:space="preserve">
    <value>Tap to copy a flag jump link</value>
  </data>
  <data name="NextImageButtonDescription" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NextImageButtonTooltip" xml:space="preserve">
    <value>Tap to proceed to the next step</value>
  </data>
  <data name="PrevImageButtonDescription" xml:space="preserve">
    <value>Prev</value>
  </data>
  <data name="PrevImageButtonTooltip" xml:space="preserve">
    <value>Tap to return to the previous step</value>
  </data>
  <data name="SettingsMenuItemTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ToolMenuItemTitle" xml:space="preserve">
    <value>Tool</value>
  </data>
  <data name="_BrowserNameCollectionCustomTitle" xml:space="preserve">
    <value>Other (Custom)</value>
  </data>
  <data name="_CommandCopiedToastMsg" xml:space="preserve">
    <value>Command copied ✅</value>
  </data>
  <data name="_CustomBrowserNameApplyPopupMsg" xml:space="preserve">
    <value>Choose whether to apply or delete the option</value>
  </data>
  <data name="_CustomBrowserNameApplyPopupTitle" xml:space="preserve">
    <value>Manage Custom Browser</value>
  </data>
  <data name="_CustomBrowserNameErrorToastMsg" xml:space="preserve">
    <value>Browser name cannot be empty or contain whitespace characters ❌</value>
  </data>
  <data name="_CustomBrowserNamePopupMsg" xml:space="preserve">
    <value>Enter a Chromium-based browser name

(Must support opening chrome://flags)</value>
  </data>
  <data name="_CustomBrowserNamePopupTitle" xml:space="preserve">
    <value>Custom Browser Name</value>
  </data>
  <data name="_DualThemeColorPairCancelToastMsg" xml:space="preserve">
    <value>Yana from a parallel universe may tell you the answer 🌌</value>
  </data>
  <data name="_DualThemeColorPairErrorToastMsg" xml:space="preserve">
    <value>"Wrong, you baka" Yana ate your reman 🍜</value>
  </data>
  <data name="_DualThemeColorPairPopupMsg" xml:space="preserve">
    <value>"Oh, wait a second" Yana took away the reman in your hand

"{0}" Some mysterious letters came out of her mouth, then she tilted her head, as if waiting for you to answer something. Seeing Yana's radiant smile, you froze for a moment

What was this? Your name? Cold sweat ran down your back. But now you had no choice but to say something. What should you say</value>
  </data>
  <data name="_DualThemeColorPairPopupTitle" xml:space="preserve">
    <value>Yana took away your reman</value>
  </data>
  <data name="_DualThemeColorPairRepeatToastMsg" xml:space="preserve">
    <value>"That's my code, you baka" Yana ate your reman 🍜</value>
  </data>
  <data name="_DualThemeColorPairSuccessToastMsg" xml:space="preserve">
    <value>"Bingo! Correct code". Restart to taste narutomaki reman 🍥</value>
  </data>
  <data name="_LangOptionChineseName" xml:space="preserve">
    <value>Simplified Chinese</value>
  </data>
  <data name="_LangOptionEnglishName" xml:space="preserve">
    <value>American English</value>
  </data>
  <data name="_LangOptionRestartToApplyToastMsg" xml:space="preserve">
    <value>Lang is changing. Restart to view the new lang 🌐</value>
  </data>
  <data name="_LangOptionUnspecifiedName" xml:space="preserve">
    <value>Follow System</value>
  </data>
  <data name="_LinkCopiedToastMsg" xml:space="preserve">
    <value>Link copied ✅</value>
  </data>
  <data name="_PopupAcceptText" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="_PopupApplyText" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="_PopupCancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="_PopupDeleteText" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="_PopupNoText" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="_PopupYesText" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="_SettingsRestartToApplyToastMsg" xml:space="preserve">
    <value>Setting is changing. Restart to apply the new config 🔄</value>
  </data>
  <data name="_SkipWarning1ToastMsg" xml:space="preserve">
    <value>Where are you going? Come back 😟</value>
  </data>
  <data name="_SkipWarning2ToastMsg" xml:space="preserve">
    <value>Get back here! No skipping allowed 😡</value>
  </data>
  <data name="_SkipWarning3ToastMsg" xml:space="preserve">
    <value>How about we explore the area ahead of us later 😇</value>
  </data>
  <data name="_SkipWarning4ToastMsg" xml:space="preserve">
    <value>U'r not there yet 😮</value>
  </data>
  <data name="_ThemeColorBlueName" xml:space="preserve">
    <value>Triple Ice Cream</value>
  </data>
  <data name="_ThemeColorGreenName" xml:space="preserve">
    <value>Tetraploid Melon</value>
  </data>
  <data name="_ThemeColorOrangeName" xml:space="preserve">
    <value>Hexavalent Orange Juice</value>
  </data>
  <data name="_ThemeColorPinkBlueName" xml:space="preserve">
    <value>Yana Narutomaki Ramen</value>
  </data>
  <data name="_ThemeColorRedName" xml:space="preserve">
    <value>A Strawberry Milk</value>
  </data>
  <data name="_ThemeColorRestartToApplyToastMsg" xml:space="preserve">
    <value>Flavor is changing. Restart to taste the new flavor 🍹</value>
  </data>
  <data name="_ThemeColorYellowName" xml:space="preserve">
    <value>Dihydrate Citric Acid</value>
  </data>
  <data name="_ThemeStateDarkName" xml:space="preserve">
    <value>Dark Theme</value>
  </data>
  <data name="_ThemeStateLightName" xml:space="preserve">
    <value>Light Theme</value>
  </data>
  <data name="_ThemeStateRestartToApplyToastMsg" xml:space="preserve">
    <value>Theme is changing. Restart to enjoy the new theme 🎨</value>
  </data>
  <data name="_ThemeStateUnspecifiedName" xml:space="preserve">
    <value>Follow System</value>
  </data>
</root>